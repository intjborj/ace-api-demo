CREATE OR REPLACE VIEW inventory.view_items
AS SELECT item.id,
    item.stock_code,
    item.desc_short,
    item.desc_long,
    item.unit_measure,
    item.active,
    item.brand,
    item.generic_name,
    item.is_medicine,
    item.sku,
    item.barcode,
    item.company,
    item.vatable,
    item.fluid,
    item.gas,
    item.direct_asset,
    item.consignor,
    item.consignment,
    item.consignor_name,
    item.comlogic_medicine_code,
    item.comlogic_medicine_generic_code,
    item.created_by,
    item.created_date,
    item.last_modified_by,
    item.last_modified_date,
    item.base_price,
    item.otc_price,
    item.item_code,
    item.item_group,
    item.item_category,
    item.item_generics,
    item.unit_of_purchase,
    item.unit_of_usage,
    item.item_conversion,
    item.item_demand_qty,
    item.discountable,
    item.production,
    item.reagent,
    item.item_dfs,
    item.deleted,
    item.item_maximum,
    item.item_minimum,
    item.item_markup,
    item.selling_price,
    item.is_edpms,
    item.markup_lock,
    --COALESCE(( SELECT inventory.last_unit_price(item.id) AS last_unit_price), 0::numeric) AS last_unit_cost,
    COALESCE(round(d.unitcost, 4), 0::numeric) AS last_unit_cost,
    item.flag_value,
    item.accounting_category,
    item.is_life_support,
    item.fix_asset
   FROM inventory.item item
   LEFT JOIN inventory.unitcostref d ON d.item = item.id
   where item.active = true;