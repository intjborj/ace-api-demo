# # This is a basic workflow to help you get started with Actions

# name: CI_Staging

# # Controls when the action will run.
# on:
#   # Triggers the workflow on push or pull request events but only for the master branch
#   push:
#     branches: [ staging ]
#   pull_request:
#     branches: [ staging ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# jobs:
#   build:
#     runs-on: self-hosted

#     steps:
#       - uses: actions/checkout@v2
#       - name: Welcome Message
#         run:  echo CICD Test Runner



#       - name: Build Docker
#         run: |
#           cd /runner/_work/hisd3-api/hisd3-api
#           PROJ_VERSION=$(sudo /opt/gradle/bin/gradle properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
#           echo "Project is ${PROJ_VERSION}"
#           sudo /opt/gradle/bin/gradle build
#           docker build -t "docker.ace-mc-bohol.com/hismk2demo_api:${PROJ_VERSION}" --build-arg PROJ_VERSION="${PROJ_VERSION}" .
#           docker login -u builder -p M6msmXMa docker.ace-mc-bohol.com
#           docker push "docker.ace-mc-bohol.com/hismk2demo_api:${PROJ_VERSION}"


name: API Staging with Gradle

on:
  pull_request:
    types:
      - closed
    branches: ['main']
    paths:
      - 'api/**'
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
defaults:
  run:
    working-directory: api

jobs:
  build:
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'staging-deployment/')
    environment: staging
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version_getter.outputs.version }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 8
      uses: actions/setup-java@v2
      with:
        java-version: '8'
        distribution: 'adopt-openj9'
    - name: Build with Gradle
      uses: gradle/gradle-build-action@v2
      with:
        arguments: -Pprofile=prod build --no-daemon
        build-root-directory: api
        gradle-version: 6.8
    - name: Get Version from Gradle build.gradle
      id: version_getter  
      run:  |
        echo "DIR $(pwd)"echo "DIR $(pwd)"
        echo "version=$(/home/runner/gradle-installations/installs/gradle-6.8/bin/gradle properties --no-daemon --console=plain -q --no-daemon | grep "^version:" | awk '{printf $2}')" >> $GITHUB_OUTPUT
        /home/runner/gradle-installations/installs/gradle-6.8/bin/gradle properties --no-daemon --console=plain -q --no-daemon | grep "^version:" | awk '{printf $2}'
        
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Check Directory
      run: |
        echo "DIR $(pwd)"
        echo "${{ steps.version_getter.outputs.version }}"
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./api 
        push: true
        tags: acemcbmis/ace_api_demo:${{ steps.version_getter.outputs.version }}
        build-args: PROJ_VERSION=${{ steps.version_getter.outputs.version }}
  





